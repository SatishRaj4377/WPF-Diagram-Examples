<Window x:Class="CreateDiagram.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CreateDiagram"
        xmlns:diagram="clr-namespace:Syncfusion.UI.Xaml.Diagram;assembly=Syncfusion.SfDiagram.WPF"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:utility="clr-namespace:Syncfusion.UI.Xaml.Diagram.Utility;assembly=Syncfusion.SfDiagram.WPF"
        mc:Ignorable="d"
        Title="MainWindow" Height="400" Width="525">

    <Window.Resources>
      
        <!--View for the NodeViewModel-->
        <Style TargetType="{x:Type diagram:Node}">
            <!--Any Geomtry can be assigned for Shape-->
            <Setter Property="Shape">
                <Setter.Value>
                    <RectangleGeometry Rect="10,10,10,10"></RectangleGeometry>
                </Setter.Value>
            </Setter>
            <!--Style is based on Path-->
            <Setter Property="ShapeStyle">
                <Setter.Value>
                    <Style TargetType="Path">
                        <Setter Property="Fill" Value="Teal"></Setter>
                        <Setter Property="Stroke" Value="LightGray"></Setter>
                        <Setter Property="Stretch" Value="Fill"></Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="diagram:NodePort">
            <Setter Property="Shape">
                <Setter.Value>
                    <EllipseGeometry RadiusX="5"
                                     RadiusY="5"></EllipseGeometry>
                </Setter.Value>
            </Setter>
            <Setter Property="ShapeStyle">
                <Setter.Value>
                    <Style TargetType="Path">
                        <Setter Property="Fill"
                                Value="Brown"></Setter>
                        <Setter Property="Stretch"
                                Value="Fill"></Setter>
                        <Setter Property="Stroke"
                                Value="RosyBrown"></Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <!--Create SfDiagram Instance-->
        <local:Diagram x:Name="Diagram">
            <!--Initialize Nodes - Node is an entity to visualize the data-->
            <diagram:SfDiagram.Nodes>
                <diagram:NodeCollection>
                    <!--OffsetX and OffsetY - helps to position the Node in Diagram-->
                    <!--NodeViewModel is business class and DataContext of Node(Control or View)-->
                    <diagram:NodeViewModel ID="node1" OffsetX="200" OffsetY="200" 
                                           UnitHeight="50" UnitWidth="75">
                        <diagram:NodeViewModel.Ports>
                            <diagram:PortCollection>
                                <diagram:NodePortViewModel NodeOffsetX="0.5" NodeOffsetY="0.5"></diagram:NodePortViewModel>
                            </diagram:PortCollection>
                        </diagram:NodeViewModel.Ports>
                    </diagram:NodeViewModel>
                    <diagram:NodeViewModel ID="node2" OffsetX="350" OffsetY="300" UnitHeight="50" UnitWidth="75"/>
                </diagram:NodeCollection>
            </diagram:SfDiagram.Nodes>
            <!--Initialize Connectors - Connector is an entity to visualize the relationship-->
            <diagram:SfDiagram.Connectors>
              <diagram:ConnectorCollection>
                   <diagram:ConnectorViewModel SourceNodeID="node1" TargetNodeID="node2"></diagram:ConnectorViewModel>
              </diagram:ConnectorCollection>
            </diagram:SfDiagram.Connectors>
        </local:Diagram>
    </Grid>
</Window>
